/* eslint-disable @next/next/no-img-element */
import Head from "next/head";
import Link from "next/link";
import { urlFor } from "../utils/image";
import sanityClient from "../utils/client";
import { motion } from "framer-motion";
import About from "../components/About";
import Contact from "../components/Contact";
import styled from "styled-components";

const BlogPostsGrid = styled.div`
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 1em;
  margin: 20px 30px 10px 0;
  // background: pink;

  @media only screen and (max-width: 1024px) {
    margin: 0 0 0 30px;
  }

  @media only screen and (max-width: 600px) {
    grid-template-columns: 1fr;
    margin: 5px;
  }
`;

const ImgWrapper = styled.div`
  cursor: pointer;
  .img {
    width: 100%;
    height: 470px;
    border: 1px solid #333232;
  }
  &:hover {
    opacity: 0.7;
    transition: 2s;
  }
  @media only screen and (max-width: 1024px) {
    .img {
      width: 100%;
      height: 270px;
      border: 1px solid #333232;
    }
  }
`;

const Home = ({ posts }) => {
  return (
    <>
      <Head>
        <title>The Indoor Jungle Project | Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.  i1co" />
      </Head>
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.3, duration: 0.5 }}
      >
        <section id="latest-posts">
          <h2>Latest</h2>
          <BlogPostsGrid>
            {posts &&
              posts.map((post, index) => (
                <span key={index}>
                  <Link href={`post/${post.slug.current}`}>
                    <ImgWrapper>
                      <img src={urlFor(post.image)} alt="" className="img" />
                    </ImgWrapper>
                  </Link>
                </span>
              ))}
          </BlogPostsGrid>
        </section>
        <About />
        <Contact />
      </motion.div>
    </>
  );
};

export default Home;

export const getServerSideProps = async () => {
  const query = '*[_type == "posts"] | order(_createdAt asc)';
  const posts = await sanityClient.fetch(query);
  if (!posts.length) {
    return {
      props: {
        posts: [],
      },
    };
  } else {
    return {
      props: {
        posts,
      },
    };
  }
};
